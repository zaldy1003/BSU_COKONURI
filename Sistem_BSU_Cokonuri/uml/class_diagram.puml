' FITUR:
' 1. Memuat Laporan, mencetak Laporan bulanan dalam bentuk pdf
' 2. Kelola Pengelola, Melakukan CRUD data Pengelola untuk mengakses sistem
' 3. Kelola Nasabah, Melakukan CRUD data Nasabah untuk transaksi tiap nasabah
' 4. Cek Riwayat Transaksi, Melihat Riwayat transaksi yang bisa dilakukan dengan filter
' 5. Pencatatan Transaksi
' 6. Mengubah harga sampah

' table:
'  Pengelola
'  Nasabah
'  Transaksi, memiliki id dari nasabah dan pengelola sehingga setiap transaksi akan memiliki id    
'  Pengaturan Transaksi, untuk set harga tiap sampah

' hubungan FITUR dan table:
' Membuat laporan (Transaksi)
' Cek Riwayat Transaksi (Transaksi)
' Pencatatan Transaksi (Transaksi)
' Kelola Pengelola (Pengelola)
' Kelola Nasabah (Nasabah)
' Kelola Harga Sampah (Pengaturan_transaksi)

@startuml
class Pengelola {
  - id: int
  - username: string
  - password: string
  - kontak: string
  '====================================================='
  + login(): void
  + logout(): void
  ' + login(username: string, password: string): bool
}

class Pengaturan_transaksi {
  - idJenisSampah: int
  - jenisSampah: string
  - hargaPerKG: float
  ' - botolKaca: float
  ' - gelasPlastik: float
  ' - kardus: float
  ' - badanBotolPlastik: float
  ' - kepalaGelasPlastik: string
  '====================================================='
  + updateHargaSampah() :void
  + tambahSampah() : void
  + hapusSampah() : void
}

class Transaksi_sampah {
  - idTransaksi: int
  - idPengelola: int
  - idNasabah: int
  - idJenisSampah: int
  - tanggalWaktu: datetime
  - beratJumlah: float
  - totalPoinTransaksi: float
  - deskripsi: string
  '====================================================='
  + riwayatTransaksi() :void
  + buatTransaksi(jenisSampah: string, berat: float): void
  + hitungPoin(berat: float): float
}

class Nasabah {
  - idNasabah: int
  - namaNasabah: string
  - kontak: string
  - alamat: string
  - jumlahTransaksi: int
  '====================================================='
  + tambahNasabah(): void
  + updateNasabah(): void
  + hapusNasabah(): void
  + tampilNasabah(): void
}

' class LaporanBulanan {
'   - idLaporan: int
'   - bulanTahun: string
'   - totalSampah: float
'   - totalTransaksi: int
'   - jenisSampahTertinggi: string
'   - pendapatanPengeluaran: float
'   + buatLaporan(): void
'   + hitungPendapatan(): float
' }

' class RiwayatTransaksi {
'   - idRiwayat: int
'   - tanggalTransaksi: datetime
'   - idTransaksi: int
'   - jenisSampah: string
'   - beratJumlah: float
'   - totalNilai: float
'   + lihatRiwayat(): List<RiwayatTransaksi>
' }

' class LogSistem {
'   - idLog: int
'   - logAktivitas: string
'   - waktuLogin: datetime
'   - statusSistem: string
'   - jumlahPenggunaAktif: int
'   + catatLog(aktivitas: string): void
'   + lihatLog(): List<LogSistem>
' }

Pengelola "1" -- "M" Transaksi_sampah
Nasabah "1" -- "M" Transaksi_sampah
Pengaturan_transaksi "1" -- "M" Transaksi_sampah
' Pengelola "1" -- "N" LaporanBulanan
' Pengelola "1" -- "N" RiwayatTransaksi
' Pengelola "1" -- "N" LogSistem

@enduml

' Relasi Antar Kelas
' 1. Pengelola ke Transaksi_sampah:
'    - Setiap transaksi dilakukan oleh seorang pengelola.' Ini memungkinkan pelacakan siapa yang mencatat setiap transaksi.
' 2. Nasabah ke Transaksi_sampah:
'    - Setiap transaksi memiliki informasi nasabah yang terlibat.
'    - Data ini akan mempermudah penyajian riwayat transaksi berdasarkan nasabah.
' 3. Pengaturan_transaksi ke Transaksi_sampah:
'    - Harga dari pengaturan transaksi digunakan untuk menghitung poin atau nilai dalam transaksi.